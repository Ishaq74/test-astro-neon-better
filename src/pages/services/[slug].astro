---
import Layout from "../../layouts/Layout.astro";
import Section from "@ui/Section.astro";
import Heading from "@ui/Heading.astro";
import Text from "@ui/Text.astro";
import Button from "@ui/Button.astro";
import Badge from "@ui/Badge.astro";
import Breadcrumb from "@ui/Breadcrumb.astro";
import Cta from "../../components/section/Cta.astro";
import { Icon } from "astro-icon/components";
import { contentLoader } from "../../content.config";
import QueryLoop from "../../components/QueryLoop.astro";

const { slug } = Astro.params;
if (typeof slug !== 'string') {
  throw new Error('Slug param is required and must be a string');
}
const service = await contentLoader.loadServiceBySlug(slug);
let faqs = [];
let avis = [];
let images = [];
let tags = [];
let steps = [];
if (service && service.id) {
  faqs = (await contentLoader.loadFaq()).filter(f => f.servicesGlobal === 1 || f.serviceId === service.id);
  avis = (await contentLoader.loadAvis()).filter(a => a.servicesGlobal === 1 || a.serviceId === service.id);
  images = (await contentLoader.loadGalerie()).filter(img => img.servicesGlobal === 1 || img.serviceId === service.id);
  if (Array.isArray(service.tags)) tags = service.tags;
  else if (typeof service.tags === 'string' && service.tags) {
    try { tags = JSON.parse(service.tags); } catch { tags = []; }
  }
  if (Array.isArray(service.steps)) steps = service.steps;
  else if (typeof service.steps === 'string' && service.steps) {
    try { steps = JSON.parse(service.steps); } catch { steps = []; }
  }
}
if (!service) {
  return Astro.redirect('/404', 404);
}
---

<Layout title={service?.title} description={service?.description} lang="fr">
  <Section padding="xl" as="header">
    <Breadcrumb items={[
      { label: 'Accueil', href: '/' },
      { label: 'Services', href: '/services' },
      { label: service?.nom || '' }
    ]} />
    <div class="hero-center">
      <div class="hero-icon">
        {service?.icon ? (
          <Icon name={service.icon} class="icon-main" />
        ) : (
          <span class="icon-main">üé®</span>
        )}
      </div>
      <Heading tag="h1" fontSize="h1" fontWeight="700" align="center">{service?.title}</Heading>
      <Text as="p" variant="secondary" class="hero-desc">{service?.description}</Text>
      <div class="hero-infos">
        <div class="hero-info-block">
          <span class="hero-price">{service?.prix}</span>
          <div class="hero-info-labels">
            <Text as="div" variant="secondary" class="hero-info-label">√Ä partir de</Text>
            <Text as="div" variant="secondary" class="hero-info-label">par prestation</Text>
          </div>
        </div>
        <div class="hero-info-block">
          <span class="hero-info-emoji">‚è±Ô∏è</span>
          <div class="hero-info-labels">
            <Text as="div" variant="secondary" class="hero-info-label">Dur√©e</Text>
            <Text as="div" variant="secondary" class="hero-info-label">2-4h selon prestation</Text>
          </div>
        </div>
      </div>
      {tags.length > 0 && (
        <div class="hero-tags">
          {tags.map(tag => <Badge variant="primary" size="md">#{tag}</Badge>)}
        </div>
      )}
    </div>
  </Section>

  <Section padding="lg" as="section">
    <Heading tag="h2" fontSize="h2" fontWeight="700">Galerie</Heading>
    <QueryLoop collection="galerie" serviceId={service.id} columns={4} gap={4} />
  </Section>

  <Section padding="lg" as="section">
    <Heading tag="h2" fontSize="h2" fontWeight="700">Avis</Heading>
    <QueryLoop collection="avis" serviceId={service.id} columns={2} gap={4} />
  </Section>

  <Section padding="xl" as="section">
    <div class="details-grid">
      <div>
        <Heading tag="h2" fontSize="h2" fontWeight="700">Ce service inclut</Heading>
        <div class="steps-list">
          {steps.length > 0 ? (
            steps.map((step, i) => (
              <div class="step-item">
                <span class="step-num">{i+1}</span>
                <Text as="span" class="step-text">{step}</Text>
              </div>
            ))
          ) : (
            service?.notes && <Text as="div" class="step-notes">{service.notes}</Text>
          )}
        </div>
      </div>
      <div>
        <Heading tag="h3" fontSize="h3" fontWeight="700">Pourquoi choisir ce service ?</Heading>
        <ul class="benefits-list">
          <li>Techniques professionnelles exclusives</li>
          <li>Produits haut de gamme certifi√©s</li>
          <li>Personnalisation selon vos go√ªts</li>
          <li>R√©sultat longue dur√©e garanti</li>
        </ul>
      </div>
    </div>
  </Section>

  <Section padding="xl" as="section">
    <Cta
      title="Pr√™t(e) pour votre transformation ?"
      desc={`R√©servez d√®s maintenant votre prestation <strong>${service?.nom}</strong> et d√©couvrez l'art du maquillage professionnel adapt√© √† votre personnalit√© unique.`}
      cta1={{ label: "R√©server maintenant ‚Üí", href: "/#contact", variant: "primary" }}
      cta2={{ label: "‚Üê Voir tous nos services", href: "/services", variant: "outline" }}
      infos="‚ú® Consultation gratuite ‚Ä¢ üé® Devis personnalis√© ‚Ä¢ ‚≠ê Satisfaction garantie"
      icon="üìû"
    />
  </Section>
</Layout>

<style>
.service-hero {
  padding: 5rem 0 3rem 0;
  background: linear-gradient(120deg, var(--theme-bg), var(--theme-surface) 80%);
  text-align: center;
}
.breadcrumb {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
  color: var(--theme-text-secondary);
  font-size: 1rem;
  margin-bottom: 2rem;
}
.breadcrumb a {
  color: var(--theme-text-secondary);
  text-decoration: none;
  transition: color 0.2s;
}
.breadcrumb a:hover {
  color: var(--brand-primary);
}
.hero-center {
  max-width: 700px;
  margin: 0 auto;
}
.hero-icon {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 2rem;
}
.icon-main {
  font-size: 3rem;
  color: var(--brand-primary);
  background: linear-gradient(120deg, var(--brand-primary), var(--brand-accent));
  border-radius: 2rem;
  padding: 1.5rem;
  box-shadow: 0 4px 32px 0 rgba(255,136,0,0.10);
}
.hero-title {
  font-family: var(--font-sans);
  font-size: 2.5rem;
  font-weight: bold;
  color: var(--theme-foreground);
  margin-bottom: 1.5rem;
}
.hero-desc {
  color: var(--theme-text-secondary);
  font-size: 1.25rem;
  margin-bottom: 2rem;
}
.hero-infos {
  display: flex;
  justify-content: center;
  gap: 2rem;
  margin-bottom: 2rem;
}
.hero-info-block {
  background: linear-gradient(120deg, var(--theme-surface), var(--theme-bg) 80%);
  border: 1px solid var(--theme-border);
  border-radius: 1.5rem;
  padding: 1.5rem 2.5rem;
  box-shadow: 0 2px 16px 0 rgba(49,60,94,0.06);
  display: flex;
  align-items: center;
  gap: 1rem;
}
.hero-price {
  font-size: 2rem;
  font-weight: bold;
  color: var(--brand-primary);
  margin-right: 1rem;
}
.hero-info-labels {
  text-align: left;
}
.hero-info-label {
  font-size: 0.95rem;
  color: var(--theme-text-secondary);
}
.hero-info-emoji {
  font-size: 1.5rem;
  margin-right: 1rem;
}
.hero-tags {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  justify-content: center;
  margin-bottom: 1rem;
}
.service-gallery {
  padding: 3rem 0;
}
.section-title {
  font-size: 2rem;
  font-weight: bold;
  color: var(--theme-foreground);
  margin-bottom: 2rem;
  text-align: center;
}
.gallery-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 1.5rem;
}
.gallery-img {
  width: 100%;
  border-radius: 1.5rem;
  box-shadow: 0 2px 16px 0 rgba(49,60,94,0.08);
}
.service-avis {
  padding: 3rem 0;
}
.avis-list {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
  gap: 1.5rem;
}
.avis-item {
  background: var(--theme-surface);
  border-radius: 1.5rem;
  box-shadow: 0 2px 16px 0 rgba(49,60,94,0.06);
  padding: 2rem;
  text-align: left;
}
.avis-note {
  font-size: 1.2rem;
  color: var(--brand-primary);
  font-weight: bold;
}
.avis-text {
  margin: 1rem 0;
  color: var(--theme-text-secondary);
}
.avis-author {
  font-size: 0.95rem;
  color: var(--theme-text-secondary);
  font-style: italic;
}
.service-faq {
  padding: 3rem 0;
}
.faq-list {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1.5rem;
  max-width: 700px;
  margin: 0 auto;
}
.faq-item {
  background: var(--theme-surface);
  border-radius: 1.5rem;
  box-shadow: 0 2px 16px 0 rgba(49,60,94,0.06);
  padding: 1.5rem 2rem;
}
.faq-q {
  font-weight: bold;
  color: var(--theme-foreground);
  margin-bottom: 0.5rem;
}
.faq-a {
  color: var(--theme-text-secondary);
}
.service-details {
  padding: 3rem 0;
}
.details-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 3rem;
  max-width: 1100px;
  margin: 0 auto;
}
.steps-list {
  display: flex;
  flex-direction: column;
  gap: 1.2rem;
}
.step-item {
  display: flex;
  align-items: center;
  background: linear-gradient(120deg, var(--theme-surface), var(--theme-bg) 80%);
  border-radius: 1rem;
  padding: 1rem 1.5rem;
  box-shadow: 0 2px 8px 0 rgba(49,60,94,0.04);
  font-size: 1.1rem;
}
.step-num {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 2rem;
  height: 2rem;
  background: linear-gradient(120deg, var(--brand-primary), var(--brand-accent));
  color: #fff;
  border-radius: 50%;
  font-weight: bold;
  margin-right: 1rem;
}
.step-text {
  color: var(--theme-foreground);
}
.step-notes {
  color: var(--theme-text-secondary);
  font-style: italic;
}
.benefits-list {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  color: var(--theme-text-secondary);
  font-size: 1.1rem;
}
.service-cta {
  padding: 3rem 0;
  background: linear-gradient(120deg, var(--theme-bg), var(--theme-surface) 80%);
}
.cta-box {
  max-width: 600px;
  margin: 0 auto;
  background: var(--theme-surface);
  border-radius: 2rem;
  box-shadow: 0 2px 32px 0 rgba(49,60,94,0.10);
  padding: 3rem 2rem;
  text-align: center;
}
.cta-icon {
  font-size: 2.5rem;
  background: linear-gradient(120deg, var(--brand-primary), var(--brand-accent));
  color: #fff;
  border-radius: 1rem;
  display: inline-block;
  padding: 1rem 1.5rem;
  margin-bottom: 1.5rem;
}
.cta-title {
  font-size: 2rem;
  font-weight: bold;
  color: var(--theme-foreground);
  margin-bottom: 1rem;
}
.cta-desc {
  color: var(--theme-text-secondary);
  font-size: 1.15rem;
  margin-bottom: 2rem;
}
.cta-actions {
  display: flex;
  flex-wrap: wrap;
  gap: 1.5rem;
  justify-content: center;
  margin-bottom: 1.5rem;
}
.cta-infos {
  color: var(--theme-text-secondary);
  font-size: 1rem;
}
@media (max-width: 900px) {
  .details-grid {
    grid-template-columns: 1fr;
    gap: 2rem;
  }
}
@media (max-width: 600px) {
  .service-hero {
    padding: 2.5rem 0 1.5rem 0;
  }
  .section-title {
    font-size: 1.3rem;
  }
  .cta-box {
    padding: 2rem 0.5rem;
  }
}
</style>

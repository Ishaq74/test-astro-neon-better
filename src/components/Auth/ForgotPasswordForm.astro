---
export const prerender = false;

import Input from '@ui/Input.astro';
import Button from '@ui/Button.astro';
import Card from '@ui/Card.astro';
import Heading from '@ui/Heading.astro';
import Text from '@ui/Text.astro';
---

<Card class="w-full max-w-md mx-auto">
  <form id="forgot-form" autocomplete="on" novalidate>
    <Heading tag="h1" fontSize="h2" fontWeight="700" align="center">Mot de passe oublié</Heading>
    <Text as="p" align="center" class="mb-4">Entrez votre adresse e-mail pour recevoir un lien de réinitialisation.</Text>
    <Input id="email" name="email" type="email" label="Adresse e-mail" required autofocus class="mb-4" />
    <div id="forgot-alert" class="mb-4" style="display:none"></div>
    <Button id="forgot-submit" type="submit" variant="primary" size="lg" class="w-full">Réinitialiser le mot de passe</Button>
    <div class="mt-4 text-center">
      <a href="/auth/connexion" class="text-sm text-primary hover:underline">Retour à la connexion</a>
    </div>
  </form>
</Card>

<script type="module">
import { authClient } from '../../lib/auth-client';

document.addEventListener('DOMContentLoaded', () => {
  const form = document.getElementById('forgot-form');
  const email = document.getElementById('email');
  const alertDiv = document.getElementById('forgot-alert');
  const submitBtn = document.getElementById('forgot-submit');
  const loader = document.getElementById('forgot-loader');
  const btnText = document.getElementById('forgot-btn-text');

  if (!form || !email || !alertDiv || !submitBtn || !loader || !btnText) return;

  const resetButtonState = () => {
    submitBtn.disabled = false;
    btnText.style.display = '';
    loader.style.display = 'none';
  };

  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    alertDiv.classList.add('hidden');
    alertDiv.textContent = '';
    submitBtn.disabled = true;
    btnText.style.display = 'none';
    loader.style.display = 'inline-block';

    if (!email.value) {
      alertDiv.textContent = 'Veuillez renseigner votre adresse e-mail.';
      alertDiv.setAttribute('variant', 'error');
      alertDiv.classList.remove('hidden');
      email.focus();
      resetButtonState();
      return;
    }

    authClient.requestPasswordReset({
      email: email.value,
      redirectTo: "/reset-password"
    }, {
      onRequest: () => { /* loader déjà visible */ },
      onSuccess: () => {
        alertDiv.textContent = 'Un email de réinitialisation a été envoyé.';
        alertDiv.setAttribute('variant', 'success');
        alertDiv.classList.remove('hidden');
        alertDiv.classList.add('bg-green-100', 'text-green-800', 'border-green-300');
        resetButtonState();
      },
      onError: (ctx) => {
        alertDiv.textContent = ctx.error?.message || 'Erreur lors de la demande.';
        alertDiv.setAttribute('variant', 'error');
        alertDiv.classList.remove('hidden');
        alertDiv.classList.remove('bg-green-100', 'text-green-800', 'border-green-300');
        resetButtonState();
      }
    });
  });
});
</script>
---
interface Props {
  as?: 'p' | 'span' | 'strong' | 'em' | 'u' | 's' | 'mark' | 'small' | 'abbr';
  variant?: 'default' | 'secondary' | 'gradient';
  class?: string;
  title?: string; // For abbr
}

const { as: Tag = 'p', variant = 'default', class: className, title } = Astro.props;

const variantClasses = {
  default: 'text-default',
  secondary: 'text-secondary',
  gradient: 'text-gradient',
}
---
<Tag class:list={["text-base", variantClasses[variant], className]} title={title}>
  <slot />
</Tag>

<style>
  .text-base {
    margin: 0;
    padding: 0;
  }
  p.text-base {
    margin-bottom: var(--space-4);
    max-width: 75ch;
  }
  strong {
    font-weight: var(--font-weight-bold);
  }
  em {
    font-style: italic;
  }
  u {
    text-decoration: underline;
    text-underline-offset: 2px;
  }
  s {
    text-decoration: line-through;
  }
  mark {
    background-color: color-mix(in srgb, var(--brand-primary) 25%, transparent);
    padding: 0 var(--space-1);
    border-radius: var(--radius-sm);
  }
  small {
    font-size: var(--font-size-sm);
  }
  abbr[title] {
    text-decoration: underline dotted;
    cursor: help;
  }

  .text-default {
    color: var(--theme-text);
  }
  .text-secondary {
    color: var(--theme-text-secondary);
  }
  .text-gradient {
    background-image: linear-gradient(45deg, var(--brand-primary), var(--brand-accent));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
</style>

---
import Card from "@ui/Card.astro";
import Button from "@ui/Button.astro";
import Badge from "@ui/Badge.astro";
import { Icon } from "astro-icon/components";

// Fonction helper pour parser les tableaux JSON ou gérer les tableaux déjà parsés
function parseArray(data: unknown): unknown[] {
  if (!data) return [];
  if (typeof data === 'string') {
    try {
      const parsed = JSON.parse(data);
      return Array.isArray(parsed) ? parsed : [];
    } catch {
      return [];
    }
  }
  return Array.isArray(data) ? data : [];
}

// Préparer les données de la formation
const program = parseArray(Astro.props.entry.program) as string[];
const advantages = parseArray(Astro.props.entry.advantages) as string[];

// Calculer la note moyenne si des avis sont disponibles
let averageRating = 0;
let ratingCount = 0;
const avis = Array.isArray(Astro.props.entry.avis) ? Astro.props.entry.avis : [];
if (avis.length > 0) {
  const sum = avis.reduce((acc: number, item: { note?: number }) => {
    return acc + (typeof item.note === 'number' ? item.note : 0);
  }, 0);
  averageRating = avis.length > 0 ? sum / avis.length : 0;
  ratingCount = avis.length;
}
---

<Card class="formation-card">
  <div class="p-0">
    <div class="relative">
      <!-- Image avec badges -->
      {Astro.props.entry.image && (
  <div class="formation-card-image-wrapper">
          <img
            src={Astro.props.entry.image}
            alt={Astro.props.entry.imageAlt || Astro.props.entry.title || Astro.props.entry.titre}
            class="formation-card-img"
          />
          
          <!-- Overlay pour améliorer le contraste des badges -->
          <div class="formation-card-image-overlay"></div>
          
          <!-- Badge principal (populaire, nouveau, etc.) -->
          {Astro.props.entry.badge && (
            <div class="formation-card-featured-badge">
              <Badge variant="primary" size="sm">
                {Astro.props.entry.badge}
              </Badge>
            </div>
          )}
          
          <!-- Badge certification -->
          {Astro.props.entry.certification && (
            <div class="formation-card-certification-badge">
              <Badge variant="secondary" size="sm">
                <Icon name="mdi:certificate" class="w-3 h-3" />
                Certifiante
              </Badge>
            </div>
          )}
        </div>
      )}
      
      {!Astro.props.entry.image && (
  <div class="formation-card-empty-block"></div>
      )}
      
  <div class="formation-card-content">
        <!-- Titre et sous-titre -->
        <div>
          <h3 class="formation-card-title">
            {Astro.props.entry.title || Astro.props.entry.titre}
          </h3>
          <p class="formation-card-subtitle">{Astro.props.entry.subtitle}</p>
          
          <!-- Système d'évaluation -->
          {ratingCount > 0 && (
            <div class="formation-card-rating-row">
              <div class="formation-card-rating-stars" aria-label={`Note: ${averageRating.toFixed(1)} sur 5`}>
                <!-- Étoile 1 -->
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class={`formation-card-star${averageRating >= 1 ? ' active' : ''}`}> 
                  <path fill-rule="evenodd" d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z" clip-rule="evenodd" />
                </svg>
                <!-- Étoile 2 -->
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class={`w-4 h-4 ${averageRating >= 2 ? 'text-yellow-400 dark:text-yellow-300' : 'text-gray-300 dark:text-gray-600'}`}>
                  <path fill-rule="evenodd" d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z" clip-rule="evenodd" />
                </svg>
                <!-- Étoile 3 -->
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class={`w-4 h-4 ${averageRating >= 3 ? 'text-yellow-400 dark:text-yellow-300' : 'text-gray-300 dark:text-gray-600'}`}>
                  <path fill-rule="evenodd" d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z" clip-rule="evenodd" />
                </svg>
                <!-- Étoile 4 -->
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class={`w-4 h-4 ${averageRating >= 4 ? 'text-yellow-400 dark:text-yellow-300' : 'text-gray-300 dark:text-gray-600'}`}>
                  <path fill-rule="evenodd" d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z" clip-rule="evenodd" />
                </svg>
                <!-- Étoile 5 -->
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class={`w-4 h-4 ${averageRating >= 5 ? 'text-yellow-400 dark:text-yellow-300' : 'text-gray-300 dark:text-gray-600'}`}>
                  <path fill-rule="evenodd" d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z" clip-rule="evenodd" />
                </svg>
              </div>
              <span class="formation-card-rating-value">{averageRating.toFixed(1)}</span>
              <span class="formation-card-rating-count">({ratingCount} avis)</span>
            </div>
          )}
        </div>
        
        <!-- Description -->
  <p class="formation-card-description">
          {Astro.props.entry.description}
        </p>
        
        <!-- Infos clés -->
  <div class="formation-card-infos">
          <div class="formation-card-info-block">
            <Icon name="mdi:clock" class="formation-card-info-icon" />
            <p class="formation-card-info-label">Durée</p>
            <p class="formation-card-info-value">{Astro.props.entry.duration || Astro.props.entry.duree}</p>
          </div>
          <div class="formation-card-info-block">
            <Icon name="mdi:users" class="formation-card-info-icon" />
            <p class="formation-card-info-label">Participants</p>
            <p class="formation-card-info-value">{Astro.props.entry.participants}</p>
          </div>
          <div class="formation-card-info-block">
            <Icon name="mdi:award" class="formation-card-info-icon" />
            <p class="formation-card-info-label">Niveau</p>
            <p class="formation-card-info-value">{Astro.props.entry.level}</p>
          </div>
        </div>
        
        <!-- Programme -->
        {program.length > 0 && (
          <div class="formation-card-program">
            <h4 class="formation-card-program-title">Programme inclus :</h4>
            <ul class="formation-card-program-list">
              {program.map((item: string) => (
                <li class="formation-card-program-step">
                  <Icon name="mdi:check-circle" class="formation-card-program-step-icon" />
                  {item}
                </li>
              ))}
            </ul>
          </div>
        )}
        
        <!-- Avantages -->
        {advantages.length > 0 && (
          <div class="formation-card-advantages">
            {advantages.slice(0, 3).map((advantage: string) => (
                <Badge variant="default">{advantage}</Badge>
            ))}
            {advantages.length > 3 && (
                <Badge variant="default">+{advantages.length - 3} autres</Badge>
            )}
          </div>
        )}
        
        <!-- Information sur FAQ et galerie -->
  <div class="formation-card-faq-row">
          {Astro.props.entry.faq && Astro.props.entry.faq.length > 0 && (
            <div class="formation-card-faq-info">
              <Icon name="mdi:frequently-asked-questions" class="formation-card-faq-icon" />
              <span class="formation-card-faq-text">{Astro.props.entry.faq.length} FAQ</span>
            </div>
          )}
          {Astro.props.entry.galerie && Astro.props.entry.galerie.length > 0 && (
            <div class="formation-card-galerie-info">
              <Icon name="mdi:image-multiple" class="formation-card-galerie-icon" />
              <span class="formation-card-galerie-text">{Astro.props.entry.galerie.length} photos</span>
            </div>
          )}
        </div>
        
        <!-- Prix et bouton d'action -->
  <div class="formation-card-action-row">
          <div class="formation-card-price-block">
            <span class="formation-card-price">{Astro.props.entry.price || Astro.props.entry.prix}€</span>
            <span class="formation-card-price-unit">/ personne</span>
          </div>
          <Button 
            href={`/formations/${Astro.props.entry.slug}`}
            variant="primary"
            size="md"
          >
            Découvrir
            <Icon name="mdi:arrow-right" class="formation-card-action-icon" />
          </Button>
<style>
  .formation-card {
    background: var(--theme-card);
    color: var(--theme-card-foreground);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-sm);
    padding: var(--space-8);
    transition: box-shadow 0.2s;
  }
  .formation-card-image-wrapper {
    position: relative;
    width: 100%;
    height: 192px;
  }
  .formation-card-img {
    width: 100%;
    height: 192px;
    object-fit: cover;
    border-radius: var(--radius-lg) var(--radius-lg) 0 0;
    background: var(--theme-muted);
  }
  .formation-card-image-overlay {
    position: absolute;
    inset: 0;
    background: linear-gradient(to top, rgba(0,0,0,0.5), transparent);
    opacity: 0.4;
    pointer-events: none;
  }
  .formation-card-featured-badge {
    position: absolute;
    top: var(--space-4);
    right: var(--space-4);
    z-index: 2;
    pointer-events: none;
  }
  .formation-card-certification-badge {
    position: absolute;
    top: calc(var(--space-4) + 36px);
    left: var(--space-4);
    z-index: 2;
    pointer-events: none;
  }
  .formation-card-empty-block {
    height: var(--space-8);
  }
  .formation-card-content {}
  .formation-card-title {
    font-size: 2rem;
    font-weight: bold;
    color: var(--theme-foreground);
    margin-bottom: var(--space-2);
  }
  .formation-card-subtitle {
    color: var(--theme-primary);
    font-weight: 500;
    margin-bottom: var(--space-2);
  }
  .formation-card-rating-row {
    display: flex;
    align-items: center;
    margin-top: var(--space-2);
  }
  .formation-card-rating-stars {
    display: flex;
    align-items: center;
    margin-right: var(--space-2);
  }
  .formation-card-star {
    width: 16px;
    height: 16px;
    color: var(--theme-star-muted);
    transition: color 0.2s;
  }
  .formation-card-star.active {
    color: var(--theme-star);
  }
  .formation-card-rating-value {
    font-size: 1rem;
    font-weight: 600;
    color: var(--theme-foreground);
  }
  .formation-card-rating-count {
    font-size: 0.85rem;
    color: var(--theme-muted-foreground);
    margin-left: var(--space-1);
  }
  .formation-card-description {
    color: var(--theme-muted-foreground);
    line-height: 1.6;
  }
  .formation-card-infos {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: var(--space-4);
    padding: var(--space-4) 0;
    border-top: 1px solid var(--theme-border);
    border-bottom: 1px solid var(--theme-border);
  }
  .formation-card-info-block {
    text-align: center;
  }
  .formation-card-info-icon {
    width: 20px;
    height: 20px;
    color: var(--theme-primary);
    margin: 0 auto var(--space-1);
  }
  .formation-card-info-label {
    font-size: 0.85rem;
    color: var(--theme-muted-foreground);
    margin-bottom: var(--space-1);
  }
  .formation-card-info-value {
    font-size: 1rem;
    font-weight: 500;
    color: var(--theme-foreground);
  }
  .formation-card-program {
    margin-top: var(--space-4);
  }
  .formation-card-program-title {
    font-weight: 600;
    color: var(--theme-foreground);
    margin-bottom: var(--space-2);
  }
  .formation-card-program-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  .formation-card-program-step {
    display: flex;
    align-items: center;
    font-size: 1rem;
    color: var(--theme-muted-foreground);
    margin-bottom: var(--space-2);
  }
  .formation-card-program-step-icon {
    width: 16px;
    height: 16px;
    color: var(--theme-primary);
    margin-right: var(--space-3);
    flex-shrink: 0;
  }
  .formation-card-advantages {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-2);
    margin-top: var(--space-4);
  }
  .formation-card-faq-row {
    display: flex;
    align-items: center;
    gap: var(--space-4);
    color: var(--theme-muted-foreground);
    font-size: 0.85rem;
    margin-top: var(--space-4);
  }
  .formation-card-faq-info, .formation-card-galerie-info {
    display: flex;
    align-items: center;
    gap: var(--space-2);
  }
  .formation-card-faq-icon, .formation-card-galerie-icon {
    width: 16px;
    height: 16px;
    margin-right: var(--space-1);
  }
  .formation-card-action-row {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-top: var(--space-4);
  }
  .formation-card-price-block {}
  .formation-card-price {
    font-size: 2rem;
    font-weight: bold;
    color: var(--theme-primary);
  }
  .formation-card-price-unit {
    font-size: 1rem;
    color: var(--theme-muted-foreground);
    margin-left: var(--space-1);
  }
  .formation-card-action-icon {
    width: 16px;
    height: 16px;
    margin-left: var(--space-2);
  }
</style>